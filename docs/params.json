{
  "name": "Vue-build",
  "tagline": "vue cli",
  "body": "<h1 align=\"center\"><a href=\"https://vuejs.org\"><img width=\"100\"src=\"https://vuejs.org/images/logo.png\" /></a>ue-build</h1>\r\n\r\n[![Build Status](https://travis-ci.org/brianvoe/vue-build.svg?branch=master)](https://travis-ci.org/brianvoe/vue-build)\r\n\r\nThe build process is one of the ***most frustrating*** things about front end development and cluttering up your app with a bunch of config and packages you rarely ever need to think about doesn't help either.\r\n\r\nVue-build takes those frustrations and hopefully eliminates them with a set of popular use cases. Vue, Webpack 2, .env, Sass, Eslint(Standard), Karma, Mocha, Chai, Nightwatch\r\n\r\n## Features\r\n- Command Line Scripts\r\n- Webpack 2\r\n  - Hot Reloading\r\n  - Hot Middleware\r\n  - Error Overlay\r\n  - .env Processing\r\n- Sass\r\n- Babel\r\n- Eslint - Standard\r\n- Unit Testing\r\n  - Karma\r\n  - Mocha\r\n  - Chai\r\n  - Code Coverage\r\n- E2e Testing\r\n  - Nightwatch\r\n  - Selenium\r\n  - Chrome Driver\r\n  - Gecko(firefox) Driver\r\n\r\n## Installation\r\n```javascript\r\nnpm install -g vue-build\r\n```\r\n\r\n## Initiation\r\n```javascript\r\n// Initiate files/folders\r\nvue-build init\r\n```\r\nSee structure for more details\r\n\r\n## Scripts\r\n```javascript\r\n// Run dev server\r\nvue-build dev\r\nvue-build dev --port=1324 // Optional - port\r\nvue-build dev --devtool=\"eval-source-map\" // Optional - default \"eval-source-map\"\r\n\r\n// Production build to dist folder\r\nvue-build prod\r\n\r\n// Unit testing\r\nvue-build unit\r\nvue-build unit --single-run // Will run one time\r\n\r\n// E2e testing\r\nvue-build e2e\r\nvue-build e2e --port=9090 // Optional - port\r\nvue-build e2e --options=\"--tag example\" // Run all tests with tag\r\nvue-build e2e --options=\"-e chrome,firefox\" // This will run both browsers\r\nvue-build e2e --devtool=\"eval\" // Optional - default \"eval\"\r\n\r\n// Linting\r\nvue-build lint\r\n\r\n// Help\r\nvue-build help\r\n```\r\n\r\n## Env file\r\n```bash\r\nENVIRONMENT=development\r\n\r\n# Dev\r\nPORT=5555\r\n\r\n# Production\r\nSOURCE_MAP=true\r\n```\r\n\r\n## Structure\r\nThe main goal was to create as simplistic of a folder structure as possible, but still allow additional flexibility for webpack configuration.\r\n- :file_folder: app\r\n  - :page_facing_up: .env - main environment config\r\n  - :page_facing_up: webpack.config.js\r\n  - :file_folder: src\r\n    - :page_facing_up: app.js - main file\r\n  - :file_folder: test\r\n    - :file_folder: unit\r\n      - :file_folder: specs - test go here\r\n      - :file_folder: coverage\r\n    - :file_folder: e2e\r\n      - :file_folder: specs - tests go here\r\n      - :file_folder: commands - see nightwatch commands\r\n      - :file_folder: assertions - see nightwatch assertions\r\n      - :file_folder: report\r\n      - :file_folder: screenshots - error screenshots\r\n\r\n## Note\r\nBy design I am trying to keep the terminal as clean as possible. So in doing so when running unit tests I disabled the browser from console logging to the terminal. In order to see console.logs run ```vue-build unit --single-run``` and view console logs there.\r\n\r\nIf anyone has a better solution please let me know\r\n\r\n## Roadmap\r\n  - Chunk Extracting\r\n  - Express server endpoint adding\r\n  - More expressive console output\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}